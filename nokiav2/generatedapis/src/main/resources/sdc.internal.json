{
    "basePath": "/sdc2/rest",
    "definitions": {
        "AdditionalInfoParameterInfo": {
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AdditionalInformationDefinition": {
            "properties": {
                "creationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "empty": {
                    "type": "boolean"
                },
                "lastCreatedCounter": {
                    "format": "int32",
                    "type": "integer"
                },
                "modificationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "ownerId": {
                    "type": "string"
                },
                "parameters": {
                    "items": {
                        "$ref": "#/definitions/AdditionalInfoParameterInfo"
                    },
                    "type": "array"
                },
                "parentUniqueId": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ArtifactDataDefinition": {
            "properties": {
                "apiUrl": {
                    "type": "string"
                },
                "artifactChecksum": {
                    "type": "string"
                },
                "artifactCreator": {
                    "type": "string"
                },
                "artifactDisplayName": {
                    "type": "string"
                },
                "artifactGroupType": {
                    "enum": [
                        "INFORMATIONAL",
                        "DEPLOYMENT",
                        "LIFE_CYCLE",
                        "SERVICE_API",
                        "TOSCA",
                        "OTHER"
                    ],
                    "type": "string"
                },
                "artifactLabel": {
                    "type": "string"
                },
                "artifactName": {
                    "type": "string"
                },
                "artifactRef": {
                    "type": "string"
                },
                "artifactRepository": {
                    "type": "string"
                },
                "artifactType": {
                    "type": "string"
                },
                "artifactUUID": {
                    "type": "string"
                },
                "artifactVersion": {
                    "type": "string"
                },
                "creationDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "creatorFullName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duplicated": {
                    "type": "boolean"
                },
                "empty": {
                    "type": "boolean"
                },
                "esId": {
                    "type": "string"
                },
                "generated": {
                    "type": "boolean"
                },
                "generatedFromId": {
                    "type": "string"
                },
                "heatParameters": {
                    "items": {
                        "$ref": "#/definitions/HeatParameterDataDefinition"
                    },
                    "type": "array"
                },
                "heatParamsUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "mandatory": {
                    "type": "boolean"
                },
                "ownerId": {
                    "type": "string"
                },
                "payloadUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "requiredArtifacts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "serviceApi": {
                    "type": "boolean"
                },
                "timeout": {
                    "format": "int32",
                    "type": "integer"
                },
                "uniqueId": {
                    "type": "string"
                },
                "updaterFullName": {
                    "type": "string"
                },
                "userIdCreator": {
                    "type": "string"
                },
                "userIdLastUpdater": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ArtifactDefinition": {
            "properties": {
                "apiUrl": {
                    "type": "string"
                },
                "artifactChecksum": {
                    "type": "string"
                },
                "artifactCreator": {
                    "type": "string"
                },
                "artifactDisplayName": {
                    "type": "string"
                },
                "artifactGroupType": {
                    "enum": [
                        "INFORMATIONAL",
                        "DEPLOYMENT",
                        "LIFE_CYCLE",
                        "SERVICE_API",
                        "TOSCA",
                        "OTHER"
                    ],
                    "type": "string"
                },
                "artifactLabel": {
                    "type": "string"
                },
                "artifactName": {
                    "type": "string"
                },
                "artifactRef": {
                    "type": "string"
                },
                "artifactRepository": {
                    "type": "string"
                },
                "artifactType": {
                    "type": "string"
                },
                "artifactUUID": {
                    "type": "string"
                },
                "artifactVersion": {
                    "type": "string"
                },
                "creationDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "creatorFullName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duplicated": {
                    "type": "boolean"
                },
                "empty": {
                    "type": "boolean"
                },
                "esId": {
                    "type": "string"
                },
                "generated": {
                    "type": "boolean"
                },
                "generatedFromId": {
                    "type": "string"
                },
                "heatParameters": {
                    "items": {
                        "$ref": "#/definitions/HeatParameterDataDefinition"
                    },
                    "type": "array"
                },
                "heatParamsUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "listHeatParameters": {
                    "items": {
                        "$ref": "#/definitions/HeatParameterDefinition"
                    },
                    "type": "array"
                },
                "mandatory": {
                    "type": "boolean"
                },
                "ownerId": {
                    "type": "string"
                },
                "payloadData": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "payloadUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "requiredArtifacts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "serviceApi": {
                    "type": "boolean"
                },
                "timeout": {
                    "format": "int32",
                    "type": "integer"
                },
                "uniqueId": {
                    "type": "string"
                },
                "updaterFullName": {
                    "type": "string"
                },
                "userIdCreator": {
                    "type": "string"
                },
                "userIdLastUpdater": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CapabilityDefinition": {
            "properties": {
                "capabilitySources": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "leftOccurrences": {
                    "type": "string"
                },
                "maxOccurrences": {
                    "type": "string"
                },
                "minOccurrences": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "ownerName": {
                    "type": "string"
                },
                "parentName": {
                    "type": "string"
                },
                "path": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "items": {
                        "$ref": "#/definitions/ComponentInstanceProperty"
                    },
                    "type": "array"
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "validSourceTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Category": {
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CategoryDefinition": {
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "icons": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "subcategories": {
                    "items": {
                        "$ref": "#/definitions/SubCategoryDefinition"
                    },
                    "type": "array"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ComponentInstance": {
            "properties": {
                "artifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "attributeValueCounter": {
                    "format": "int32",
                    "type": "integer"
                },
                "capabilities": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/CapabilityDefinition"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentName": {
                    "type": "string"
                },
                "componentUid": {
                    "type": "string"
                },
                "componentVersion": {
                    "type": "string"
                },
                "creationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "customizationUUID": {
                    "type": "string"
                },
                "deploymentArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "groupInstances": {
                    "items": {
                        "$ref": "#/definitions/GroupInstance"
                    },
                    "type": "array"
                },
                "icon": {
                    "type": "string"
                },
                "inputValueCounter": {
                    "format": "int32",
                    "type": "integer"
                },
                "invariantName": {
                    "type": "string"
                },
                "modificationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "originType": {
                    "enum": [
                        "PRODUCT",
                        "SERVICE",
                        "VF",
                        "VFC",
                        "CP",
                        "VL",
                        "VFCMT",
                        "CVFC",
                        "PNF"
                    ],
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "posX": {
                    "type": "string"
                },
                "posY": {
                    "type": "string"
                },
                "propertyValueCounter": {
                    "format": "int32",
                    "type": "integer"
                },
                "requirements": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/RequirementDefinition"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "toscaComponentName": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ComponentInstanceInput": {
            "properties": {
                "componentInstanceId": {
                    "type": "string"
                },
                "componentInstanceName": {
                    "type": "string"
                },
                "constraints": {
                    "items": {
                        "$ref": "#/definitions/PropertyConstraint"
                    },
                    "type": "array"
                },
                "defaultValue": {
                    "type": "string"
                },
                "definition": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "getInputValues": {
                    "items": {
                        "$ref": "#/definitions/GetInputValueDataDefinition"
                    },
                    "type": "array"
                },
                "hidden": {
                    "type": "boolean"
                },
                "immutable": {
                    "type": "boolean"
                },
                "inputId": {
                    "type": "string"
                },
                "inputPath": {
                    "type": "string"
                },
                "inputs": {
                    "items": {
                        "$ref": "#/definitions/ComponentInstanceInput"
                    },
                    "type": "array"
                },
                "instanceUniqueId": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "parentUniqueId": {
                    "type": "string"
                },
                "password": {
                    "type": "boolean"
                },
                "path": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "items": {
                        "$ref": "#/definitions/ComponentInstanceProperty"
                    },
                    "type": "array"
                },
                "propertyId": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "rules": {
                    "items": {
                        "$ref": "#/definitions/PropertyRule"
                    },
                    "type": "array"
                },
                "schema": {
                    "$ref": "#/definitions/SchemaDefinition"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueUniqueUid": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ComponentInstanceProperty": {
            "properties": {
                "componentInstanceId": {
                    "type": "string"
                },
                "componentInstanceName": {
                    "type": "string"
                },
                "constraints": {
                    "items": {
                        "$ref": "#/definitions/PropertyConstraint"
                    },
                    "type": "array"
                },
                "defaultValue": {
                    "type": "string"
                },
                "definition": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "getInputValues": {
                    "items": {
                        "$ref": "#/definitions/GetInputValueDataDefinition"
                    },
                    "type": "array"
                },
                "hidden": {
                    "type": "boolean"
                },
                "immutable": {
                    "type": "boolean"
                },
                "inputId": {
                    "type": "string"
                },
                "inputPath": {
                    "type": "string"
                },
                "instanceUniqueId": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "parentUniqueId": {
                    "type": "string"
                },
                "password": {
                    "type": "boolean"
                },
                "path": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "propertyId": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "rules": {
                    "items": {
                        "$ref": "#/definitions/PropertyRule"
                    },
                    "type": "array"
                },
                "schema": {
                    "$ref": "#/definitions/SchemaDefinition"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "valueUniqueUid": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ComponentMetadataDataDefinition": {
            "properties": {
                "allVersions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "componentType": {
                    "enum": [
                        "RESOURCE",
                        "SERVICE",
                        "RESOURCE_INSTANCE",
                        "PRODUCT",
                        "SERVICE_INSTANCE"
                    ],
                    "type": "string"
                },
                "conformanceLevel": {
                    "type": "string"
                },
                "contactId": {
                    "type": "string"
                },
                "creationDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "creatorFullName": {
                    "type": "string"
                },
                "creatorUserId": {
                    "type": "string"
                },
                "csarUUID": {
                    "type": "string"
                },
                "csarVersion": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "highestVersion": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "importedToscaChecksum": {
                    "type": "string"
                },
                "invariantUUID": {
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "isHighestVersion": {
                    "type": "boolean"
                },
                "lastUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastUpdaterFullName": {
                    "type": "string"
                },
                "lastUpdaterUserId": {
                    "type": "string"
                },
                "lifecycleState": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "projectCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "systemName": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "uniqueId": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ComponentMetadataDefinition": {
            "properties": {
                "metadataDataDefinition": {
                    "$ref": "#/definitions/ComponentMetadataDataDefinition"
                }
            },
            "type": "object"
        },
        "ConsumerDefinition": {
            "properties": {
                "consumerDetailsLastupdatedtime": {
                    "format": "int64",
                    "type": "integer"
                },
                "consumerLastAuthenticationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "consumerName": {
                    "type": "string"
                },
                "consumerPassword": {
                    "type": "string"
                },
                "consumerSalt": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "lastModfierAtuid": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DistributionStatusInfo": {
            "properties": {
                "errorReason": {
                    "type": "string"
                },
                "omfComponentID": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DistributionStatusListResponse": {
            "properties": {
                "distributionStatusList": {
                    "items": {
                        "$ref": "#/definitions/DistributionStatusInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetInputValueDataDefinition": {
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "getInputIndex": {
                    "$ref": "#/definitions/GetInputValueDataDefinition"
                },
                "indexValue": {
                    "format": "int32",
                    "type": "integer"
                },
                "inputId": {
                    "type": "string"
                },
                "inputName": {
                    "type": "string"
                },
                "list": {
                    "type": "boolean"
                },
                "ownerId": {
                    "type": "string"
                },
                "propName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupDefinition": {
            "properties": {
                "artifacts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "artifactsUuid": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "groupUUID": {
                    "type": "string"
                },
                "invariantUUID": {
                    "type": "string"
                },
                "members": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "properties": {
                    "items": {
                        "$ref": "#/definitions/PropertyDataDefinition"
                    },
                    "type": "array"
                },
                "propertyValueCounter": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "typeUid": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupInstance": {
            "properties": {
                "artifacts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "artifactsUuid": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "customizationUUID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "groupInstanceArtifacts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "groupInstanceArtifactsUuid": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "groupName": {
                    "type": "string"
                },
                "groupUUID": {
                    "type": "string"
                },
                "groupUid": {
                    "type": "string"
                },
                "invariantUUID": {
                    "type": "string"
                },
                "modificationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "posX": {
                    "type": "string"
                },
                "posY": {
                    "type": "string"
                },
                "properties": {
                    "items": {
                        "$ref": "#/definitions/PropertyDataDefinition"
                    },
                    "type": "array"
                },
                "propertyValueCounter": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupingDefinition": {
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HeatParameterDataDefinition": {
            "properties": {
                "currentValue": {
                    "type": "string"
                },
                "defaultValue": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HeatParameterDefinition": {
            "properties": {
                "currentValue": {
                    "type": "string"
                },
                "defaultValue": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InputDefinition": {
            "properties": {
                "constraints": {
                    "items": {
                        "$ref": "#/definitions/PropertyConstraint"
                    },
                    "type": "array"
                },
                "defaultValue": {
                    "type": "string"
                },
                "definition": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "getInputValues": {
                    "items": {
                        "$ref": "#/definitions/GetInputValueDataDefinition"
                    },
                    "type": "array"
                },
                "hidden": {
                    "type": "boolean"
                },
                "immutable": {
                    "type": "boolean"
                },
                "inputId": {
                    "type": "string"
                },
                "inputPath": {
                    "type": "string"
                },
                "inputs": {
                    "items": {
                        "$ref": "#/definitions/ComponentInstanceInput"
                    },
                    "type": "array"
                },
                "instanceUniqueId": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "parentUniqueId": {
                    "type": "string"
                },
                "password": {
                    "type": "boolean"
                },
                "properties": {
                    "items": {
                        "$ref": "#/definitions/ComponentInstanceProperty"
                    },
                    "type": "array"
                },
                "propertyId": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "schema": {
                    "$ref": "#/definitions/SchemaDefinition"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "InterfaceDefinition": {
            "properties": {
                "creationDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "definition": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "lastUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "operations": {
                    "additionalProperties": {
                        "$ref": "#/definitions/OperationDataDefinition"
                    },
                    "type": "object"
                },
                "operationsMap": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Operation"
                    },
                    "type": "object"
                },
                "ownerId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LifecycleChangeInfoWithAction": {
            "properties": {
                "action": {
                    "enum": [
                        "CREATE_FROM_CSAR",
                        "UPDATE_FROM_EXTERNAL_API"
                    ],
                    "type": "string"
                },
                "userRemarks": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Operation": {
            "properties": {
                "creationDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "definition": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "implementation": {
                    "$ref": "#/definitions/ArtifactDataDefinition"
                },
                "implementationArtifact": {
                    "$ref": "#/definitions/ArtifactDefinition"
                },
                "inputs": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PropertyDataDefinition"
                    },
                    "type": "object"
                },
                "lastUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "ownerId": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OperationDataDefinition": {
            "properties": {
                "creationDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "implementation": {
                    "$ref": "#/definitions/ArtifactDataDefinition"
                },
                "inputs": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PropertyDataDefinition"
                    },
                    "type": "object"
                },
                "lastUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "ownerId": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Product": {
            "properties": {
                "additionalInformation": {
                    "items": {
                        "$ref": "#/definitions/AdditionalInformationDefinition"
                    },
                    "type": "array"
                },
                "allArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "allVersions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "artifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "capabilities": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/CapabilityDefinition"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "categories": {
                    "items": {
                        "$ref": "#/definitions/CategoryDefinition"
                    },
                    "type": "array"
                },
                "componentInstances": {
                    "items": {
                        "$ref": "#/definitions/ComponentInstance"
                    },
                    "type": "array"
                },
                "componentInstancesAttributes": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/ComponentInstanceProperty"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentInstancesInputs": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/ComponentInstanceInput"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentInstancesProperties": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/ComponentInstanceProperty"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentInstancesRelations": {
                    "items": {
                        "$ref": "#/definitions/RequirementCapabilityRelDef"
                    },
                    "type": "array"
                },
                "componentMetadataDefinition": {
                    "$ref": "#/definitions/ComponentMetadataDefinition"
                },
                "componentType": {
                    "enum": [
                        "RESOURCE",
                        "SERVICE",
                        "RESOURCE_INSTANCE",
                        "PRODUCT",
                        "SERVICE_INSTANCE"
                    ],
                    "type": "string"
                },
                "conformanceLevel": {
                    "type": "string"
                },
                "contactId": {
                    "type": "string"
                },
                "contacts": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creationDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "creatorFullName": {
                    "type": "string"
                },
                "creatorUserId": {
                    "type": "string"
                },
                "csarUUID": {
                    "type": "string"
                },
                "csarVersion": {
                    "type": "string"
                },
                "deploymentArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "derivedFromGenericType": {
                    "type": "string"
                },
                "derivedFromGenericVersion": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "groups": {
                    "items": {
                        "$ref": "#/definitions/GroupDefinition"
                    },
                    "type": "array"
                },
                "highestVersion": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "importedToscaChecksum": {
                    "type": "string"
                },
                "inputs": {
                    "items": {
                        "$ref": "#/definitions/InputDefinition"
                    },
                    "type": "array"
                },
                "invariantUUID": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "lastUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastUpdaterFullName": {
                    "type": "string"
                },
                "lastUpdaterUserId": {
                    "type": "string"
                },
                "lifecycleState": {
                    "enum": [
                        "READY_FOR_CERTIFICATION",
                        "CERTIFICATION_IN_PROGRESS",
                        "CERTIFIED",
                        "NOT_CERTIFIED_CHECKIN",
                        "NOT_CERTIFIED_CHECKOUT"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "projectCode": {
                    "type": "string"
                },
                "requirements": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/RequirementDefinition"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "systemName": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "toscaArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "toscaType": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PropertyConstraint": {
            "type": "object"
        },
        "PropertyDataDefinition": {
            "properties": {
                "defaultValue": {
                    "type": "string"
                },
                "definition": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "getInputValues": {
                    "items": {
                        "$ref": "#/definitions/GetInputValueDataDefinition"
                    },
                    "type": "array"
                },
                "hidden": {
                    "type": "boolean"
                },
                "immutable": {
                    "type": "boolean"
                },
                "inputId": {
                    "type": "string"
                },
                "inputPath": {
                    "type": "string"
                },
                "instanceUniqueId": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "parentUniqueId": {
                    "type": "string"
                },
                "password": {
                    "type": "boolean"
                },
                "propertyId": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "schema": {
                    "$ref": "#/definitions/SchemaDefinition"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PropertyDefinition": {
            "properties": {
                "constraints": {
                    "items": {
                        "$ref": "#/definitions/PropertyConstraint"
                    },
                    "type": "array"
                },
                "defaultValue": {
                    "type": "string"
                },
                "definition": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "getInputValues": {
                    "items": {
                        "$ref": "#/definitions/GetInputValueDataDefinition"
                    },
                    "type": "array"
                },
                "hidden": {
                    "type": "boolean"
                },
                "immutable": {
                    "type": "boolean"
                },
                "inputId": {
                    "type": "string"
                },
                "inputPath": {
                    "type": "string"
                },
                "instanceUniqueId": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "parentUniqueId": {
                    "type": "string"
                },
                "password": {
                    "type": "boolean"
                },
                "propertyId": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "schema": {
                    "$ref": "#/definitions/SchemaDefinition"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PropertyRule": {
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "firstToken": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "rule": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ruleSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RelationshipImpl": {
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RequirementAndRelationshipPair": {
            "properties": {
                "capability": {
                    "type": "string"
                },
                "capabilityOwnerId": {
                    "type": "string"
                },
                "capabilityUid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "relationship": {
                    "$ref": "#/definitions/RelationshipImpl"
                },
                "requirement": {
                    "type": "string"
                },
                "requirementOwnerId": {
                    "type": "string"
                },
                "requirementUid": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RequirementCapabilityRelDef": {
            "properties": {
                "fromNode": {
                    "type": "string"
                },
                "relationships": {
                    "items": {
                        "$ref": "#/definitions/RequirementAndRelationshipPair"
                    },
                    "type": "array"
                },
                "toNode": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RequirementDefinition": {
            "properties": {
                "capability": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "leftOccurrences": {
                    "type": "string"
                },
                "maxOccurrences": {
                    "type": "string"
                },
                "minOccurrences": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "node": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "ownerName": {
                    "type": "string"
                },
                "parentName": {
                    "type": "string"
                },
                "path": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "relationship": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Resource": {
            "properties": {
                "abstract": {
                    "type": "boolean"
                },
                "additionalInformation": {
                    "items": {
                        "$ref": "#/definitions/AdditionalInformationDefinition"
                    },
                    "type": "array"
                },
                "allArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "allVersions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "artifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "attributes": {
                    "items": {
                        "$ref": "#/definitions/PropertyDefinition"
                    },
                    "type": "array"
                },
                "capabilities": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/CapabilityDefinition"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "categories": {
                    "items": {
                        "$ref": "#/definitions/CategoryDefinition"
                    },
                    "type": "array"
                },
                "componentInstances": {
                    "items": {
                        "$ref": "#/definitions/ComponentInstance"
                    },
                    "type": "array"
                },
                "componentInstancesAttributes": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/ComponentInstanceProperty"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentInstancesInputs": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/ComponentInstanceInput"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentInstancesProperties": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/ComponentInstanceProperty"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentInstancesRelations": {
                    "items": {
                        "$ref": "#/definitions/RequirementCapabilityRelDef"
                    },
                    "type": "array"
                },
                "componentMetadataDefinition": {
                    "$ref": "#/definitions/ComponentMetadataDefinition"
                },
                "componentType": {
                    "enum": [
                        "RESOURCE",
                        "SERVICE",
                        "RESOURCE_INSTANCE",
                        "PRODUCT",
                        "SERVICE_INSTANCE"
                    ],
                    "type": "string"
                },
                "conformanceLevel": {
                    "type": "string"
                },
                "contactId": {
                    "type": "string"
                },
                "cost": {
                    "type": "string"
                },
                "creationDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "creatorFullName": {
                    "type": "string"
                },
                "creatorUserId": {
                    "type": "string"
                },
                "csarUUID": {
                    "type": "string"
                },
                "csarVersion": {
                    "type": "string"
                },
                "defaultCapabilities": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deploymentArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "derivedFrom": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "derivedFromGenericType": {
                    "type": "string"
                },
                "derivedFromGenericVersion": {
                    "type": "string"
                },
                "derivedList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "description": {
                    "type": "string"
                },
                "groups": {
                    "items": {
                        "$ref": "#/definitions/GroupDefinition"
                    },
                    "type": "array"
                },
                "highestVersion": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "importedToscaChecksum": {
                    "type": "string"
                },
                "inputs": {
                    "items": {
                        "$ref": "#/definitions/InputDefinition"
                    },
                    "type": "array"
                },
                "interfaces": {
                    "additionalProperties": {
                        "$ref": "#/definitions/InterfaceDefinition"
                    },
                    "type": "object"
                },
                "invariantUUID": {
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "lastUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastUpdaterFullName": {
                    "type": "string"
                },
                "lastUpdaterUserId": {
                    "type": "string"
                },
                "licenseType": {
                    "type": "string"
                },
                "lifecycleState": {
                    "enum": [
                        "READY_FOR_CERTIFICATION",
                        "CERTIFICATION_IN_PROGRESS",
                        "CERTIFIED",
                        "NOT_CERTIFIED_CHECKIN",
                        "NOT_CERTIFIED_CHECKOUT"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "projectCode": {
                    "type": "string"
                },
                "properties": {
                    "items": {
                        "$ref": "#/definitions/PropertyDefinition"
                    },
                    "type": "array"
                },
                "requirements": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/RequirementDefinition"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "resourceType": {
                    "enum": [
                        "VFC",
                        "VF",
                        "CP",
                        "PNF",
                        "CVFC",
                        "VL",
                        "VFCMT",
                        "ABSTRACT"
                    ],
                    "type": "string"
                },
                "resourceVendorModelNumber": {
                    "type": "string"
                },
                "systemName": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "toscaArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "toscaResourceName": {
                    "type": "string"
                },
                "toscaType": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                },
                "vendorRelease": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SchemaDefinition": {
            "properties": {
                "constraints": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "derivedFrom": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                },
                "ownerId": {
                    "type": "string"
                },
                "properties": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PropertyDataDefinition"
                    },
                    "type": "object"
                },
                "property": {
                    "$ref": "#/definitions/PropertyDataDefinition"
                }
            },
            "type": "object"
        },
        "Service": {
            "properties": {
                "additionalInformation": {
                    "items": {
                        "$ref": "#/definitions/AdditionalInformationDefinition"
                    },
                    "type": "array"
                },
                "allArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "allVersions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "artifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "capabilities": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/CapabilityDefinition"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "categories": {
                    "items": {
                        "$ref": "#/definitions/CategoryDefinition"
                    },
                    "type": "array"
                },
                "componentInstances": {
                    "items": {
                        "$ref": "#/definitions/ComponentInstance"
                    },
                    "type": "array"
                },
                "componentInstancesAttributes": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/ComponentInstanceProperty"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentInstancesInputs": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/ComponentInstanceInput"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentInstancesProperties": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/ComponentInstanceProperty"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "componentInstancesRelations": {
                    "items": {
                        "$ref": "#/definitions/RequirementCapabilityRelDef"
                    },
                    "type": "array"
                },
                "componentMetadataDefinition": {
                    "$ref": "#/definitions/ComponentMetadataDefinition"
                },
                "componentType": {
                    "enum": [
                        "RESOURCE",
                        "SERVICE",
                        "RESOURCE_INSTANCE",
                        "PRODUCT",
                        "SERVICE_INSTANCE"
                    ],
                    "type": "string"
                },
                "conformanceLevel": {
                    "type": "string"
                },
                "contactId": {
                    "type": "string"
                },
                "creationDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "creatorFullName": {
                    "type": "string"
                },
                "creatorUserId": {
                    "type": "string"
                },
                "csarUUID": {
                    "type": "string"
                },
                "csarVersion": {
                    "type": "string"
                },
                "deploymentArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "derivedFromGenericType": {
                    "type": "string"
                },
                "derivedFromGenericVersion": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "distributionStatus": {
                    "enum": [
                        "DISTRIBUTION_NOT_APPROVED",
                        "DISTRIBUTION_APPROVED",
                        "DISTRIBUTED",
                        "DISTRIBUTION_REJECTED"
                    ],
                    "type": "string"
                },
                "ecompGeneratedNaming": {
                    "type": "boolean"
                },
                "groups": {
                    "items": {
                        "$ref": "#/definitions/GroupDefinition"
                    },
                    "type": "array"
                },
                "highestVersion": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "importedToscaChecksum": {
                    "type": "string"
                },
                "inputs": {
                    "items": {
                        "$ref": "#/definitions/InputDefinition"
                    },
                    "type": "array"
                },
                "invariantUUID": {
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "lastUpdateDate": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastUpdaterFullName": {
                    "type": "string"
                },
                "lastUpdaterUserId": {
                    "type": "string"
                },
                "lifecycleState": {
                    "enum": [
                        "READY_FOR_CERTIFICATION",
                        "CERTIFICATION_IN_PROGRESS",
                        "CERTIFIED",
                        "NOT_CERTIFIED_CHECKIN",
                        "NOT_CERTIFIED_CHECKOUT"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namingPolicy": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "projectCode": {
                    "type": "string"
                },
                "requirements": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/RequirementDefinition"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "serviceApiArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "serviceRole": {
                    "type": "string"
                },
                "serviceType": {
                    "type": "string"
                },
                "systemName": {
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "toscaArtifacts": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ArtifactDefinition"
                    },
                    "type": "object"
                },
                "toscaType": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SubCategoryDefinition": {
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "groupings": {
                    "items": {
                        "$ref": "#/definitions/GroupingDefinition"
                    },
                    "type": "array"
                },
                "icons": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "normalizedName": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "lastLoginTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "ACTIVE",
                        "INACTIVE"
                    ],
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "info": {
        "title": "Internal API's",
        "version": "1.0.0"
    },
    "paths": {
        "/healthCheck": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "return BE health check",
                "operationId": "getHealthCheck",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Titan, ES and BE are all up"
                    },
                    "500": {
                        "description": "One or more BE components (Titan, ES, BE) are down"
                    }
                },
                "summary": "return aggregate BE health check of Titan, ES and BE",
                "tags": [
                    "BE Monitoring"
                ]
            }
        },
        "/monitoring": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "processMonitoringMetrics",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "tags": [
                    "BE Monitoring"
                ]
            }
        },
        "/v1/artifactTypes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve all artifactTypes",
                "operationId": "getArtifactTypes",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns artifactTypes Ok"
                    },
                    "404": {
                        "description": "No artifactTypes were found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve all artifactTypes",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/catalog/audit-records/{componentType}/{componentUniqueId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "get audit records for a service or a resource",
                "operationId": "getComponentAuditRecords",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "get component audit records",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/dataTypes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns data types",
                "operationId": "getAllDataTypesServlet",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "datatypes"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Data types not found"
                    }
                },
                "summary": "Get data types",
                "tags": [
                    "Types Fetch Servlet"
                ]
            }
        },
        "/v1/catalog/products": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created product",
                "operationId": "createProduct",
                "parameters": [
                    {
                        "description": "Product object to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "USER_ID of product strategist user",
                        "in": "header",
                        "name": "USER_ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "201": {
                        "description": "Product created"
                    },
                    "400": {
                        "description": "Invalid/missing content"
                    },
                    "403": {
                        "description": "Restricted operation / Empty USER_ID header"
                    },
                    "409": {
                        "description": "Product already exists / User not found / Wrong user role"
                    }
                },
                "summary": "Create product",
                "tags": [
                    "Product Catalog"
                ]
            }
        },
        "/v1/catalog/products/productName/{productName}/productVersion/{productVersion}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns product according to name and version",
                "operationId": "getServiceByNameAndVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "productVersion",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Product found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "summary": "Retrieve Service",
                "tags": [
                    "Product Catalog"
                ]
            }
        },
        "/v1/catalog/products/validate-name/{productName}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "checks if the chosen product name is available ",
                "operationId": "validateServiceName",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "validate product name",
                "tags": [
                    "Product Catalog"
                ]
            }
        },
        "/v1/catalog/products/{productId}": {
            "delete": {
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "tags": [
                    "Product Catalog"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns product according to productId",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Product found"
                    },
                    "403": {
                        "description": "Missing information"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "409": {
                        "description": "Restricted operation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve product",
                "tags": [
                    "Product Catalog"
                ]
            }
        },
        "/v1/catalog/products/{productId}/metadata": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated product",
                "operationId": "updateProductMetadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "productId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Product object to be Updated",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Product Updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Product Metadata",
                "tags": [
                    "Product Catalog"
                ]
            }
        },
        "/v1/catalog/resources": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created resource",
                "operationId": "createResource",
                "parameters": [
                    {
                        "description": "Resource object to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "201": {
                        "description": "Resource created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Resource already exist"
                    }
                },
                "summary": "Create Resource",
                "tags": [
                    "Resources Catalog"
                ]
            }
        },
        "/v1/catalog/resources/certified/abstract": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getCertifiedAbstractResources",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "tags": [
                    "Resources Catalog"
                ]
            }
        },
        "/v1/catalog/resources/certified/notabstract": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "getCertifiedNotAbstractResources",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "tags": [
                    "Resources Catalog"
                ]
            }
        },
        "/v1/catalog/resources/csar/{csaruuid}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns resource created from csar uuid",
                "operationId": "getResourceFromCsar",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "csaruuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "201": {
                        "description": "Resource retrieced"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Create Resource",
                "tags": [
                    "Resources Catalog"
                ]
            }
        },
        "/v1/catalog/resources/resourceName/{resourceName}/resourceVersion/{resourceVersion}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns resource according to resourceId",
                "operationId": "getResourceByNameAndVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "resourceVersion",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieve Resource by name and version",
                "tags": [
                    "Resources Catalog"
                ]
            }
        },
        "/v1/catalog/resources/validate-name/{resourceName}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "checks if the chosen resource name is available ",
                "operationId": "validateResourceName",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "subtype",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "validate resource name",
                "tags": [
                    "Resources Catalog"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}": {
            "delete": {
                "operationId": "deleteResource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "tags": [
                    "Resources Catalog"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns resource according to resourceId",
                "operationId": "getResourceById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieve Resource",
                "tags": [
                    "Resources Catalog"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated resource",
                "operationId": "updateResource",
                "parameters": [
                    {
                        "description": "Resource object to be updated",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Resource already exist"
                    }
                },
                "summary": "Update Resource",
                "tags": [
                    "Resources Catalog"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/additionalinfo": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns Additional Inforamtion property",
                "operationId": "getAllResourceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "resource id to update with new property",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "list of additional information"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Get all Additional Information under resource",
                "tags": [
                    "Additional Information Servlet"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created Additional Inforamtion property",
                "operationId": "createResourceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "resource id to update with new property",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Additional information key value to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Additional information created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Create Additional Information Label and Value",
                "tags": [
                    "Additional Information Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/additionalinfo/{labelId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns deleted Additional Inforamtion property",
                "operationId": "updateResourceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "resource id to update with new property",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "label id",
                        "in": "path",
                        "name": "labelId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Additional information deleted"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Create Additional Information Label and Value",
                "tags": [
                    "Additional Information Servlet"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns Additional Inforamtion property",
                "operationId": "getResourceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "resource id to update with new property",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "label id",
                        "in": "path",
                        "name": "labelId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "fetched additional information"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Get Additional Information by id",
                "tags": [
                    "Additional Information Servlet"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated Additional Inforamtion property",
                "operationId": "updateResourceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "resource id to update with new property",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "label id",
                        "in": "path",
                        "name": "labelId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Additional information key value to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Additional information updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Update Additional Information Label and Value",
                "tags": [
                    "Additional Information Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/artifacts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created ArtifactDefinition",
                "operationId": "loadArtifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Artifact already exist"
                    }
                },
                "summary": "Create Artifact",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/artifacts/{artifactId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns delete artifact",
                "operationId": "deleteArtifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Delete Artifact",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns downloaded artifact",
                "operationId": "downloadResourceArtifactBase64",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource artifact downloaded"
                    },
                    "404": {
                        "description": "Resource/Artifact not found"
                    }
                },
                "summary": "Download resource Artifact in Base64",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated artifact",
                "operationId": "updateArtifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Artifact",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/attributes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created resource attribute",
                "operationId": "createAttribute",
                "parameters": [
                    {
                        "description": "resource id to update with new attribute",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Resource attribute to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource property created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Resource attribute already exist"
                    }
                },
                "summary": "Create Resource Attribute",
                "tags": [
                    "Resource Attribute Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/attributes/{attributeId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns deleted attribute",
                "operationId": "deleteAttribute",
                "parameters": [
                    {
                        "description": "resource id of attribute",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Attribute id to delete",
                        "in": "path",
                        "name": "attributeId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "deleted attribute"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Resource property not found"
                    }
                },
                "summary": "Create Resource Attribute",
                "tags": [
                    "Resource Attribute Servlet"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated attribute",
                "operationId": "updateAttribute",
                "parameters": [
                    {
                        "description": "resource id to update with new attribute",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "attribute id to update",
                        "in": "path",
                        "name": "attributeId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Resource attribute to update",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource attribute updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Resource Attribute",
                "tags": [
                    "Resource Attribute Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/metadata": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated resource metadata",
                "operationId": "updateResourceMetadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Resource metadata to be updated",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource metadata updated"
                    },
                    "400": {
                        "description": "Invalid content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Resource Metadata",
                "tags": [
                    "Resources Catalog"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/properties": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created resource property",
                "operationId": "createProperty",
                "parameters": [
                    {
                        "description": "resource id to update with new property",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Resource property to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource property created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Resource property already exist"
                    }
                },
                "summary": "Create Resource Property",
                "tags": [
                    "Resource Property Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/properties/{propertyId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns deleted property",
                "operationId": "deleteProperty",
                "parameters": [
                    {
                        "description": "resource id of property",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Property id to delete",
                        "in": "path",
                        "name": "propertyId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "deleted property"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Resource property not found"
                    }
                },
                "summary": "Create Resource Property",
                "tags": [
                    "Resource Property Servlet"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns property of resource",
                "operationId": "getProperty",
                "parameters": [
                    {
                        "description": "resource id of property",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "proerty id to get",
                        "in": "path",
                        "name": "propertyId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "property"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Resource property not found"
                    }
                },
                "summary": "Create Resource Property",
                "tags": [
                    "Resource Property Servlet"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated property",
                "operationId": "updateProperty",
                "parameters": [
                    {
                        "description": "resource id to update with new property",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "proerty id to update",
                        "in": "path",
                        "name": "propertyId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Resource property to update",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource property updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Resource Property",
                "tags": [
                    "Resource Property Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/{interfaceType}/{operation}/artifacts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created resource",
                "operationId": "loadArtifactToInterface",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "interfaceType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "operation",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Content-MD5",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Artifact already exist"
                    }
                },
                "summary": "Create Artifact and Attach to interface",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceId}/{interfaceType}/{operation}/artifacts/{artifactId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "delete matching artifact from interface",
                "operationId": "deleteArtifactToInterface",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "interfaceType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "operation",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "delete artifact under interface deleted"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Artifact already exist"
                    }
                },
                "summary": "delete Artifact from interface",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "updates artifact by interface",
                "operationId": "updateArtifactToInterface",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "interfaceType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "operation",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Content-MD5",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "delete artifact under interface deleted"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Artifact already exist"
                    }
                },
                "summary": "update Artifact  Attach to interface",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/resources/{resourceName}/{version}": {
            "delete": {
                "operationId": "deleteResourceByNameAndVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "tags": [
                    "Resources Catalog"
                ]
            }
        },
        "/v1/catalog/services": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created service",
                "operationId": "createService",
                "parameters": [
                    {
                        "description": "Service object to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "201": {
                        "description": "Service created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Service already exist"
                    }
                },
                "summary": "Create Service",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/distribution/{did}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Return  the  list  of  distribution status objects",
                "operationId": "getListOfDistributionStatuses",
                "parameters": [
                    {
                        "in": "path",
                        "name": "did",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Status not found"
                    }
                },
                "summary": "Retrieve Distributions",
                "tags": [
                    "Distribution Service Servlet"
                ]
            }
        },
        "/v1/catalog/services/serviceName/{serviceName}/serviceVersion/{serviceVersion}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns service according to name and version",
                "operationId": "getServiceByNameAndVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "serviceVersion",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "summary": "Retrieve Service",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/toscatoheat/{artifactName}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns downloaded artifact",
                "operationId": "downloadServiceArtifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifactName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "Artifact downloaded"
                    },
                    "401": {
                        "description": "Authorization required"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Artifact not found"
                    }
                },
                "summary": "Download service artifact",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/validate-name/{serviceName}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "checks if the chosen service name is available ",
                "operationId": "validateServiceName",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "validate service name",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/{componentId}/inputs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns Inputs list",
                "operationId": "getComponentInputs",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fromId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "amount",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Get Inputs only",
                "tags": [
                    "Input Catalog"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}": {
            "delete": {
                "operationId": "deleteService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "tags": [
                    "Service Catalog"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns service according to serviceId",
                "operationId": "getServiceById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "summary": "Retrieve Service",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/additionalinfo": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns Additional Inforamtion property",
                "operationId": "getAllServiceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "service id to update with new property",
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "list of additional information"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Get all Additional Information under service",
                "tags": [
                    "Additional Information Servlet"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created Additional Inforamtion property",
                "operationId": "createServiceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "service id to update with new property",
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Additional information key value to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Additional information created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Create Additional Information Label and Value",
                "tags": [
                    "Additional Information Servlet"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/additionalinfo/{labelId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns deleted Additional Inforamtion property",
                "operationId": "deleteServiceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "service id to update with new property",
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "label id",
                        "in": "path",
                        "name": "labelId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Additional information deleted"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Create Additional Information Label and Value",
                "tags": [
                    "Additional Information Servlet"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns Additional Inforamtion property",
                "operationId": "getServiceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "service id to update with new property",
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "label id",
                        "in": "path",
                        "name": "labelId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "fetched additional information"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Get Additional Information by id",
                "tags": [
                    "Additional Information Servlet"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated Additional Inforamtion property",
                "operationId": "updateServiceAdditionalInformationLabel",
                "parameters": [
                    {
                        "description": "service id to update with new property",
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "label id",
                        "in": "path",
                        "name": "labelId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Additional information key value to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Additional information updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Additional information key already exist"
                    }
                },
                "summary": "Update Additional Information Label and Value",
                "tags": [
                    "Additional Information Servlet"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/artifacts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created ArtifactDefinition",
                "operationId": "loadInformationArtifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Artifact already exist"
                    }
                },
                "summary": "Create Artifact",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/artifacts/api/{artifactId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns Deleted ArtifactDefinition",
                "operationId": "deleteApiArtifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Content-MD5",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Api Artifact deleted"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Delete Api Artifact",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created ArtifactDefinition",
                "operationId": "updateApiArtifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Content-MD5",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Api Artifact Updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Api Artifact",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/artifacts/{artifactId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns delete artifact",
                "operationId": "deleteInformationalArtifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Service artifact deleted"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Delete Artifact",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns downloaded artifact",
                "operationId": "downloadServiceArtifactBase64",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service artifact downloaded"
                    },
                    "404": {
                        "description": "Service/Artifact not found"
                    }
                },
                "summary": "Download service Artifact in Base64",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated artifact",
                "operationId": "updateInformationArtifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Service artifact created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Artifact",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/distribution-state/{state}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "service with the changed distribution status",
                "operationId": "updateServiceDistributionState",
                "parameters": [
                    {
                        "description": "DistributionChangeInfo - get comment out of body",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LifecycleChangeInfoWithAction"
                        }
                    },
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "approve",
                            "reject"
                        ],
                        "in": "path",
                        "name": "state",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service distribution state changed"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Service is not available for distribution"
                    },
                    "404": {
                        "description": "Requested service was not found"
                    },
                    "409": {
                        "description": "Restricted operation"
                    },
                    "500": {
                        "description": "Internal Server Error. Please try again later."
                    }
                },
                "summary": "Update Service Distribution State",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/distribution/{did}/markDeployed": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "relevant audit record will be created",
                "operationId": "markDistributionAsDeployed",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "did",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service was marked as deployed"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Service is not available"
                    },
                    "404": {
                        "description": "Requested service was not found"
                    },
                    "409": {
                        "description": "Restricted operation"
                    },
                    "500": {
                        "description": "Internal Server Error. Please try again later."
                    }
                },
                "summary": "Mark distribution as deployed",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/distribution/{env}/activate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "activate distribution",
                "operationId": "activateDistribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "env",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Requested service was not found"
                    },
                    "409": {
                        "description": "Service cannot be distributed due to missing deployment artifacts"
                    },
                    "500": {
                        "description": "Internal Server Error. Please try again later."
                    }
                },
                "summary": "Activate distribution",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/metadata": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated service",
                "operationId": "updateServiceMetadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Service object to be Updated",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service Updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Service Metadata",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/{serviceId}/tempUrlToBeDeleted": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "operationId": "tempUrlToBeDeleted",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error. Please try again later."
                    }
                },
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/{serviceName}/{version}": {
            "delete": {
                "operationId": "deleteServiceByNameAndVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/catalog/services/{serviceUUID}/distribution": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns list  bases on the  information extracted from  Auditing Records according to service uuid",
                "operationId": "getServiceById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceUUID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Service found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "summary": "Retrieve Distributions",
                "tags": [
                    "Distribution Service Servlet"
                ]
            }
        },
        "/v1/catalog/upload/{resourceAuthority}": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Returns created resource",
                "operationId": "uploadMultipart",
                "parameters": [
                    {
                        "description": "validValues: normative-resource / user-resource",
                        "enum": [
                            "multipart",
                            "user-resource",
                            "user-resource-ui-import"
                        ],
                        "in": "path",
                        "name": "resourceAuthority",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "FileInputStream",
                        "in": "formData",
                        "name": "resourceZip",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "description": "resourceMetadata",
                        "in": "formData",
                        "name": "resourceMetadata",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": true,
                        "in": "query",
                        "name": "createNewVersion",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Resource already exist"
                    }
                },
                "summary": "Create Resource from yaml",
                "tags": [
                    "Resources Catalog Upload"
                ]
            }
        },
        "/v1/catalog/uploadType/capability": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Returns created Capability Type",
                "operationId": "uploadCapabilityType",
                "parameters": [
                    {
                        "description": "FileInputStream",
                        "in": "formData",
                        "name": "capabilityTypeZip",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Capability Type created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Capability Type already exist"
                    }
                },
                "summary": "Create Capability Type from yaml",
                "tags": [
                    "Catalog Types Upload"
                ]
            }
        },
        "/v1/catalog/uploadType/categories": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Returns created categories",
                "operationId": "uploadCategories",
                "parameters": [
                    {
                        "description": "FileInputStream",
                        "in": "formData",
                        "name": "categoriesZip",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Categories created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Category already exist"
                    }
                },
                "summary": "Create Categories from yaml",
                "tags": [
                    "Catalog Types Upload"
                ]
            }
        },
        "/v1/catalog/uploadType/datatypes": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Returns created data types",
                "operationId": "uploadDataTypes",
                "parameters": [
                    {
                        "description": "FileInputStream",
                        "in": "formData",
                        "name": "dataTypesZip",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Data types created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Data types already exist"
                    }
                },
                "summary": "Create Categories from yaml",
                "tags": [
                    "Catalog Types Upload"
                ]
            }
        },
        "/v1/catalog/uploadType/grouptypes": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Returns created group types",
                "operationId": "uploadGroupTypes",
                "parameters": [
                    {
                        "description": "FileInputStream",
                        "in": "formData",
                        "name": "groupTypesZip",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "group types created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "group types already exist"
                    }
                },
                "summary": "Create GroupTypes from yaml",
                "tags": [
                    "Catalog Types Upload"
                ]
            }
        },
        "/v1/catalog/uploadType/interfaceLifecycle": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Returns created Interface Lifecycle Type",
                "operationId": "uploadInterfaceLifecycleType",
                "parameters": [
                    {
                        "description": "FileInputStream",
                        "in": "formData",
                        "name": "interfaceLifecycleTypeZip",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Interface Lifecycle Type created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Interface Lifecycle Type already exist"
                    }
                },
                "summary": "Create Interface Lyfecycle Type from yaml",
                "tags": [
                    "Catalog Types Upload"
                ]
            }
        },
        "/v1/catalog/uploadType/policytypes": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "Returns created policy types",
                "operationId": "uploadPolicyTypes",
                "parameters": [
                    {
                        "description": "FileInputStream",
                        "in": "formData",
                        "name": "policyTypesZip",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "policy types created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "policy types already exist"
                    }
                },
                "summary": "Create PolicyTypes from yaml",
                "tags": [
                    "Catalog Types Upload"
                ]
            }
        },
        "/v1/catalog/{componentCollection}/{componentId}/lifecycleState/{lifecycleOperation}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "changeResourceState",
                "parameters": [
                    {
                        "description": "LifecycleChangeInfo - relevant for checkin, failCertification, cancelCertification",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "validValues: resources / services / products",
                        "enum": [
                            "resources",
                            "services",
                            "products"
                        ],
                        "in": "path",
                        "name": "componentCollection",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "checkout",
                            "undoCheckout",
                            "checkin",
                            "certificationRequest",
                            "startCertification",
                            "failCertification",
                            "cancelCertification",
                            "certify"
                        ],
                        "in": "path",
                        "name": "lifecycleOperation",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "id of component to be changed",
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "id of user initiating the operation",
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource state changed"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Resource already exist"
                    }
                },
                "summary": "Change Resource lifecycle State",
                "tags": [
                    "Lifecycle Actions Servlet"
                ]
            }
        },
        "/v1/catalog/{componentType}/latestversion/notabstract": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns Requirments And Capabilities according to componentId",
                "operationId": "getLatestVersionNotAbstractCheckoutComponentsByBody",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "internalComponentType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Consumer Object to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Get Component Requirments And Capabilities",
                "tags": [
                    "Component Servlet"
                ]
            }
        },
        "/v1/catalog/{componentType}/latestversion/notabstract/metadata": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns componentId",
                "operationId": "getLatestVersionNotAbstractCheckoutComponentsIdesOnly",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "internalComponentType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "uid list",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Get Component uid only",
                "tags": [
                    "Component Servlet"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/componentInstances": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns component instances",
                "operationId": "getComponentInstancesFilteredByPropertiesAndInputs",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "searchText",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "uid list",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Get Component instances",
                "tags": [
                    "Component Servlet"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/componentInstances/{instanceId}/{inputId}/properties": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns properties list",
                "operationId": "getInputPropertiesForComponentInstance",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inputId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Get properties",
                "tags": [
                    "Input Catalog"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/componentInstances/{instanceId}/{originComponentUid}/inputs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns Inputs list",
                "operationId": "getComponentInstanceInputs",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "originComponentUid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Get Inputs only",
                "tags": [
                    "Input Catalog"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/create/inputs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Return inputs list",
                "operationId": "createMultipleInputs",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "ComponentIns Inputs Object to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Create inputs on service",
                "tags": [
                    "Input Catalog"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/delete/{inputId}/input": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete service input",
                "operationId": "deleteInput",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inputId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Service Input to be deleted",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Input deleted"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Input not found"
                    }
                },
                "summary": "Delete input from service",
                "tags": [
                    "Input Catalog"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/filteredDataByParams": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns resource according to resourceId",
                "operationId": "getComponentDataFilteredByParams",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "include",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieve Resource",
                "tags": [
                    "Component Servlet"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/filteredproperties/{propertyNameFragment}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns properties belonging to component instances of specific component by name and optionally resource type",
                "operationId": "getFilteredComponentInstanceProperties",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "propertyNameFragment",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "resourceType",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Retrieve properties belonging to component instances of specific component by name and optionally resource type",
                "tags": [
                    "Component Servlet"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/inputs/{inputId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns inputs list",
                "operationId": "getInputsAndPropertiesForComponentInput",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inputId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Get inputs",
                "tags": [
                    "Input Catalog"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/inputs/{inputId}/inputs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns inputs list",
                "operationId": "getInputsForComponentInput",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "inputId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Get inputs",
                "tags": [
                    "Input Catalog"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentId}/requirmentsCapabilities": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns Requirements And Capabilities according to componentId",
                "operationId": "getRequirementAndCapabilities",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Get Component Requirments And Capabilities",
                "tags": [
                    "Component Servlet"
                ]
            }
        },
        "/v1/catalog/{componentType}/{componentUuid}/conformanceLevelValidation": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns the result according to conformance level in BE config",
                "operationId": "conformanceLevelValidation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentUuid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component not found"
                    }
                },
                "summary": "Validate Component Conformance Level",
                "tags": [
                    "Component Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/artifactsByType/{artifactGroupType}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns artifacts",
                "operationId": "getComponentArtifacts",
                "parameters": [
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactGroupType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component artifacts"
                    },
                    "404": {
                        "description": "Resource/Artifact not found"
                    }
                },
                "summary": "Get component Artifacts",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/groups/{groupId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns artifacts metadata according to groupId",
                "operationId": "getGroupArtifactById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "groupId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "group found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                },
                "summary": "Get group artifacts ",
                "tags": [
                    "Resource Group Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/groups/{groupUniqueId}/metadata": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated group definition",
                "operationId": "updateGroupMetadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "groupUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Service object to be Updated",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Group Updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Group Metadata",
                "tags": [
                    "Resource Group Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/groups/{groupUniqueId}/properties": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated list of properties",
                "operationId": "updateGroupProperties",
                "parameters": [
                    {
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "groupUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Service object to be Updated",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Group Updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Updates List of properties on a group (only values)",
                "tags": [
                    "Resource Group Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created ComponentInstance",
                "operationId": "createComponentInstance",
                "parameters": [
                    {
                        "description": "RI object to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "USER_ID of modifier user",
                        "in": "header",
                        "name": "USER_ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Component created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Component instance already exist"
                    }
                },
                "summary": "Create ComponentInstance",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/associate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created RelationshipInfo",
                "operationId": "associateRIToRI",
                "parameters": [
                    {
                        "description": "unique id of the container component",
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "allowed values are resources /services / products",
                        "enum": [
                            "resources",
                            "services",
                            "products"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "RelationshipInfo",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Relationship created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Missing information"
                    },
                    "409": {
                        "description": "Relationship already exist"
                    }
                },
                "summary": "Associate RI to RI",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/createAndAssociate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created RI and RelationshipInfo",
                "operationId": "createAndAssociateRIToRI",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "RI created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Relationship already exist"
                    }
                },
                "summary": "Create RI and associate RI to RI",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/dissociate": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns deleted RelationshipInfo",
                "operationId": "dissociateRIFromRI",
                "parameters": [
                    {
                        "description": "allowed values are resources /services / products",
                        "enum": [
                            "resources",
                            "services",
                            "products"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "unique id of the container component",
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "RelationshipInfo",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Relationship deleted"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Missing information"
                    }
                },
                "summary": "Dissociate RI from RI",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/multipleComponentInstance": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated resource instance",
                "operationId": "updateMultipleComponentInstance",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services / products",
                        "enum": [
                            "resources",
                            "services",
                            "products"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Component Instance JSON Array",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource instance updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update resource instance multiple component",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated resource instance",
                "operationId": "updateComponentInstanceMetadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services / products",
                        "enum": [
                            "resources",
                            "services",
                            "products"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resource instance updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update resource instance",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/artifacts": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated artifact",
                "operationId": "loadComponentInstanceArtifact",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Content-MD5",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Artifact updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Load Resource Instance artifact payload",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/artifacts/{artifactId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns deleted artifact",
                "operationId": "deleteComponentInstanceArtifact",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "Content-MD5",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Artifact updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Delete Resource Instance artifact",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/artifacts/{artifactId}/heatParams": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated artifact",
                "operationId": "updateRIArtifact",
                "parameters": [
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the artifact",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Artifact updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Resource Instance HEAT_ENV parameters",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/attribute": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated resource instance attribute",
                "operationId": "updateResourceInstanceAttribute",
                "parameters": [
                    {
                        "description": "service id",
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource instance id",
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "id of user initiating the operation",
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource instance created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update resource instance attribute",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/changeVersion": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated resource instance",
                "operationId": "changeResourceInstanceVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource instance created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update resource instance",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/groupInstance/{groupInstId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns artifacts metadata according to groupInstId",
                "operationId": "getGroupArtifactById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "groupInstId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "group found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                },
                "summary": "Get group artifacts ",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/groupInstance/{groupInstanceId}/property": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated resource instance property",
                "operationId": "updateGroupInstanceProperty",
                "parameters": [
                    {
                        "description": "service id",
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource instance id",
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "group instance id",
                        "in": "path",
                        "name": "groupInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "id of user initiating the operation",
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource instance created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update resource instance property",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/input": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated resource instance property",
                "operationId": "updateResourceInstanceInput",
                "parameters": [
                    {
                        "description": "service id",
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource instance id",
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "id of user initiating the operation",
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource instance created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update resource instance property",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/property": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated resource instance property",
                "operationId": "updateResourceInstanceProperty",
                "parameters": [
                    {
                        "description": "service id",
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource instance id",
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "id of user initiating the operation",
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource instance created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update resource instance property",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{componentInstanceId}/property/{propertyId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns deleted resource instance property",
                "operationId": "deleteResourceInstanceProperty",
                "parameters": [
                    {
                        "description": "service id",
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "resource instance id",
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "property id",
                        "in": "path",
                        "name": "propertyId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "id of user initiating the operation",
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource instance created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update resource instance",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstance/{resourceInstanceId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns delete resourceInstance",
                "operationId": "deleteResourceInstance",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "resourceInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services / products",
                        "enum": [
                            "resources",
                            "services",
                            "products"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "ResourceInstance deleted"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Delete ResourceInstance",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstances/{componentInstanceId}/artifacts/{artifactId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns downloaded artifact",
                "operationId": "downloadResourceInstanceArtifactBase64",
                "parameters": [
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ResourceInstance artifact downloaded"
                    },
                    "404": {
                        "description": "ResourceInstance/Artifact not found"
                    }
                },
                "summary": "Download component Artifact in Base64",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/resourceInstances/{componentInstanceId}/artifactsByType/{artifactGroupType}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns artifacts",
                "operationId": "getComponentInstanceArtifacts",
                "parameters": [
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "artifactGroupType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Component artifacts"
                    },
                    "404": {
                        "description": "Resource/Artifact not found"
                    }
                },
                "summary": "Get component Artifacts",
                "tags": [
                    "Resource Artifact Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{componentId}/update/inputs": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated input",
                "operationId": "updateComponentInputs",
                "parameters": [
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the input",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Input updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update resource  inputs",
                "tags": [
                    "Input Catalog"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{containerComponentId}/componentInstances/{componentInstanceUniqueId}/properties": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns component instance properties",
                "operationId": "getInstancePropertiesById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "containerComponentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Properties found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Component/Component Instance - not found"
                    }
                },
                "summary": "Get component instance properties",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{containerComponentId}/serviceProxy": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created service proxy",
                "operationId": "createServiceProxy",
                "parameters": [
                    {
                        "description": "RI object to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "containerComponentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "USER_ID of modifier user",
                        "in": "header",
                        "name": "USER_ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Service proxy created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "409": {
                        "description": "Service proxy already exist"
                    }
                },
                "summary": "Create service proxy",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{containerComponentId}/serviceProxy/{serviceProxyId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns delete service proxy",
                "operationId": "deleteServiceProxy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "containerComponentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "serviceProxyId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services / products",
                        "enum": [
                            "resources",
                            "services",
                            "products"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Service proxy deleted"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Delete service proxy",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{containerComponentId}/serviceProxy/{serviceProxyId}/changeVersion/{newServiceId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated service proxy",
                "operationId": "changeServiceProxyVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "containerComponentId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "serviceProxyId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "valid values: resources / services",
                        "enum": [
                            "resources",
                            "services"
                        ],
                        "in": "path",
                        "name": "containerComponentType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Service proxy created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update service proxy with new version",
                "tags": [
                    "Resource Instance Servlet"
                ]
            }
        },
        "/v1/catalog/{containerComponentType}/{serviceId}/resourceInstance/{componentInstanceId}/groupInstance/{groupInstanceId}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns updated group instance",
                "operationId": "updateGroupInstancePropertyValues",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "groupInstanceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Group instance object to be Updated",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Group Instance Property Values Updated"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Update Group Instance Property Values",
                "tags": [
                    "Service Catalog"
                ]
            }
        },
        "/v1/categories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve the all resource, service and product categories",
                "operationId": "getAllCategories",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns categories Ok"
                    },
                    "403": {
                        "description": "Missing information"
                    },
                    "409": {
                        "description": "Restricted operation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve the all resource, service and product categories",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/categories/{componentType}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve the list of all resource/service/product categories/sub-categories/groupings.",
                "operationId": "getComponentCategories",
                "parameters": [
                    {
                        "description": "allowed values are resources / services/ products",
                        "enum": [
                            "resources",
                            "services",
                            "products"
                        ],
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns categories Ok"
                    },
                    "400": {
                        "description": "Invalid component type"
                    },
                    "403": {
                        "description": "Missing information"
                    },
                    "409": {
                        "description": "Restricted operation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve the list of all resource/service/product categories/sub-categories/groupings",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/category/{componentType}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create new component category",
                "operationId": "createComponentCategory",
                "parameters": [
                    {
                        "description": "allowed values are resources /services / products",
                        "enum": [
                            "resources",
                            "services",
                            "products"
                        ],
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Category to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Category created"
                    },
                    "400": {
                        "description": "Invalid category data"
                    },
                    "403": {
                        "description": "USER_ID header is missing"
                    },
                    "409": {
                        "description": "Category already exists / User not permitted to perform the action"
                    },
                    "500": {
                        "description": "General Error"
                    }
                },
                "summary": "Create new component category",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/category/{componentType}/{categoryId}/subCategory": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create new component sub-category for existing category",
                "operationId": "createComponentSubCategory",
                "parameters": [
                    {
                        "description": "allowed values are resources / products",
                        "enum": [
                            "resources",
                            "products"
                        ],
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Parent category unique ID",
                        "in": "path",
                        "name": "categoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subcategory to be created. \ne.g. {\"name\":\"Resource-subcat\"}",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Subcategory created"
                    },
                    "400": {
                        "description": "Invalid subcategory data"
                    },
                    "403": {
                        "description": "USER_ID header is missing"
                    },
                    "404": {
                        "description": "Parent category wasn't found"
                    },
                    "409": {
                        "description": "Subcategory already exists / User not permitted to perform the action"
                    },
                    "500": {
                        "description": "General Error"
                    }
                },
                "summary": "Create new component sub-category",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/category/{componentType}/{categoryId}/subCategory/{subCategoryId}/grouping": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Create new component grouping for existing sub-category",
                "operationId": "createComponentGrouping",
                "parameters": [
                    {
                        "description": "allowed values are products",
                        "enum": [
                            "products"
                        ],
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Parent category unique ID",
                        "in": "path",
                        "name": "categoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Parent sub-category unique ID",
                        "in": "path",
                        "name": "subCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subcategory to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Grouping created"
                    },
                    "400": {
                        "description": "Invalid grouping data"
                    },
                    "403": {
                        "description": "USER_ID header is missing"
                    },
                    "404": {
                        "description": "Parent category or subcategory were not found"
                    },
                    "409": {
                        "description": "Grouping already exists / User not permitted to perform the action"
                    },
                    "500": {
                        "description": "General Error"
                    }
                },
                "summary": "Create new component grouping",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/category/{componentType}/{categoryUniqueId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete component category",
                "operationId": "deleteComponentCategory",
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "204": {
                        "description": "Category deleted"
                    },
                    "403": {
                        "description": "USER_ID header is missing"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "409": {
                        "description": "User not permitted to perform the action"
                    },
                    "500": {
                        "description": "General Error"
                    }
                },
                "summary": "Delete component category",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/category/{componentType}/{categoryUniqueId}/subCategory/{subCategoryUniqueId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete component category",
                "operationId": "deleteComponentSubCategory",
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subCategoryUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "204": {
                        "description": "Category deleted"
                    },
                    "403": {
                        "description": "USER_ID header is missing"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "409": {
                        "description": "User not permitted to perform the action"
                    },
                    "500": {
                        "description": "General Error"
                    }
                },
                "summary": "Delete component category",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/category/{componentType}/{categoryUniqueId}/subCategory/{subCategoryUniqueId}/grouping/{groupingUniqueId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete component category",
                "operationId": "deleteComponentGrouping",
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subCategoryUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "groupingUniqueId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "204": {
                        "description": "Category deleted"
                    },
                    "403": {
                        "description": "USER_ID header is missing"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "409": {
                        "description": "User not permitted to perform the action"
                    },
                    "500": {
                        "description": "General Error"
                    }
                },
                "summary": "Delete component category",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/configuration/ui": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve all artifactTypes",
                "operationId": "getConfiguration",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns artifactTypes Ok"
                    },
                    "404": {
                        "description": "No artifactTypes were found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve all artifactTypes",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/consumers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns created ONAP consumer credentials",
                "operationId": "createConsumer",
                "parameters": [
                    {
                        "description": "Consumer Object to be created",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Consumer credentials created"
                    },
                    "400": {
                        "description": "Invalid content / Missing content"
                    },
                    "403": {
                        "description": "Restricted operation"
                    }
                },
                "summary": "Consumer credentials",
                "tags": [
                    "Consumer Servlet"
                ]
            }
        },
        "/v1/consumers/{consumerId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns deleted consumer according to ConsumerID",
                "operationId": "deleteConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "consumerId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ConsumerDefinition"
                        }
                    },
                    "204": {
                        "description": "Consumer deleted"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Consumer not found"
                    }
                },
                "summary": "Deletes Consumer",
                "tags": [
                    "Consumer Servlet"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns consumer according to ConsumerID",
                "operationId": "getConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "consumerId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Consumer found"
                    },
                    "403": {
                        "description": "Restricted operation"
                    },
                    "404": {
                        "description": "Consumer not found"
                    }
                },
                "summary": "Retrieve Consumer",
                "tags": [
                    "Consumer Servlet"
                ]
            }
        },
        "/v1/ecompPortalMenu": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve ONAP portal menu",
                "operationId": "getListOfCsars",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve ONAP portal menu"
                    }
                },
                "summary": "Retrieve ONAP portal menu - MOC",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/followed": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve all followed",
                "operationId": "getFollowedResourcesServices",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns followed Ok"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve all followed",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/inactiveComponents/{componentType}": {
            "delete": {
                "operationId": "deleteMarkedResources",
                "parameters": [
                    {
                        "in": "path",
                        "name": "componentType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/propertyScopes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve all propertyScopes",
                "operationId": "getPropertyScopes",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns propertyScopes Ok"
                    },
                    "404": {
                        "description": "No propertyScopes were found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve all propertyScopes",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/screen": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve catalog resources and services",
                "operationId": "getCatalogComponents",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "enum": [
                                "PRODUCT",
                                "SERVICE",
                                "VF",
                                "VFC",
                                "CP",
                                "VL",
                                "VFCMT",
                                "CVFC",
                                "PNF"
                            ],
                            "type": "string"
                        },
                        "name": "excludeTypes",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns resources and services Ok"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve catalog resources and services",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/tags": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve all tags",
                "operationId": "getTags",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns tags Ok"
                    },
                    "404": {
                        "description": "No tags were found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve all tags",
                "tags": [
                    "Element Servlet"
                ]
            }
        },
        "/v1/user": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Provision new user",
                "operationId": "createUser",
                "parameters": [
                    {
                        "description": "json describe the user",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "201": {
                        "description": "New user created"
                    },
                    "400": {
                        "description": "Invalid Content."
                    },
                    "403": {
                        "description": "Missing information"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "409": {
                        "description": "User already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "add user",
                "tags": [
                    "User Administration"
                ]
            }
        },
        "/v1/user/admins": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns all administrators",
                "operationId": "getAdminsUser",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns user Ok"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "retrieve all administrators",
                "tags": [
                    "User Administration"
                ]
            }
        },
        "/v1/user/authorize": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "authorize user",
                "operationId": "authorize",
                "parameters": [
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "HTTP_CSP_FIRSTNAME",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "HTTP_CSP_LASTNAME",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "HTTP_CSP_EMAIL",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns user Ok"
                    },
                    "403": {
                        "description": "Restricted Access"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "authorize",
                "tags": [
                    "User Administration"
                ]
            }
        },
        "/v1/user/users": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns list of users with the specified roles, or all of users in the case of empty 'roles' header",
                "operationId": "getUsersList",
                "parameters": [
                    {
                        "description": "Any active user's USER_ID ",
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "TESTER,DESIGNER,PRODUCT_STRATEGIST,OPS,PRODUCT_MANAGER,GOVERNOR, ADMIN OR all users by not typing anything",
                        "in": "query",
                        "name": "roles",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns users Ok"
                    },
                    "204": {
                        "description": "No provisioned ASDC users of requested role"
                    },
                    "400": {
                        "description": "Missing content"
                    },
                    "403": {
                        "description": "Restricted Access"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Retrieve the list of all active ASDC users or only group of users having specific roles.",
                "tags": [
                    "User Administration"
                ]
            }
        },
        "/v1/user/{userId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "Delete user",
                "operationId": "deActivateUser",
                "parameters": [
                    {
                        "description": "userId of user to get",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Update deleted OK"
                    },
                    "400": {
                        "description": "Invalid Content."
                    },
                    "403": {
                        "description": "Missing information"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "409": {
                        "description": "Restricted operation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "delete user",
                "tags": [
                    "User Administration"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns user details according to userId",
                "operationId": "get",
                "parameters": [
                    {
                        "description": "userId of user to get",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns user Ok"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "retrieve user details",
                "tags": [
                    "User Administration"
                ]
            }
        },
        "/v1/user/{userId}/role": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "Returns user role according to userId",
                "operationId": "getRole",
                "parameters": [
                    {
                        "description": "userId of user to get",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns user role Ok"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "retrieve user role",
                "tags": [
                    "User Administration"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "Update user role",
                "operationId": "updateUserRole",
                "parameters": [
                    {
                        "description": "userId of user to get",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "json describe the update role",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "header",
                        "name": "USER_ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Update user OK"
                    },
                    "400": {
                        "description": "Invalid Content."
                    },
                    "403": {
                        "description": "Missing information/Restricted operation"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "409": {
                        "description": "User already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "update user role",
                "tags": [
                    "User Administration"
                ]
            }
        },
        "/version": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "return the ASDC application version",
                "operationId": "getSdcVersion",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "return ASDC version"
                    },
                    "500": {
                        "description": "Internal Error"
                    }
                },
                "summary": "return the ASDC application version",
                "tags": [
                    "BE Monitoring"
                ]
            }
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "name": "Additional Information Servlet"
        },
        {
            "name": "Resource Artifact Servlet"
        },
        {
            "name": "Resource Attribute Servlet"
        },
        {
            "name": "BE Monitoring"
        },
        {
            "name": "Resource Instance Servlet"
        },
        {
            "name": "Component Servlet"
        },
        {
            "name": "Consumer Servlet"
        },
        {
            "name": "Distribution Service Servlet"
        },
        {
            "name": "Element Servlet"
        },
        {
            "name": "Resource Group Servlet"
        },
        {
            "name": "Input Catalog"
        },
        {
            "name": "Lifecycle Actions Servlet"
        },
        {
            "name": "Product Catalog"
        },
        {
            "name": "Resource Property Servlet"
        },
        {
            "name": "Resources Catalog Upload"
        },
        {
            "name": "Resources Catalog"
        },
        {
            "name": "Service Catalog"
        },
        {
            "name": "Types Fetch Servlet"
        },
        {
            "name": "Catalog Types Upload"
        },
        {
            "name": "User Administration"
        }
    ]
}
